package com.lambda;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class MapFlatMapConcept {

    public static void main(String[] args) {

        ArrayList <String> fruit = new ArrayList<>();
        fruit.add("BANANA");
        fruit.add("KIWI");
        fruit.add("PAPAYA");
        fruit.add("APPLE");
        System.out.println("List of fruit :"+fruit);

        //// lets use map() to convert list of fruit
        List<Integer> collect = fruit.stream().map(i -> i.length()).collect(Collectors.toList());
        System.out.println("List generated by map "+collect);



        List<List<Integer>> number = new ArrayList<>();
        // adding the elements to number arraylist
        number.add(Arrays.asList(1,2));
        number.add(Arrays.asList(3,4));
        number.add(Arrays.asList(5,6));
        number.add(Arrays.asList(2,6));
        number.add(Arrays.asList(3,5));
        number.add(Arrays.asList(7,8));


        System.out.println("List of List :"+number);
        //using flatmap() to flatten this list
        List<Integer> collect1 = number.stream().flatMap(list -> list.stream()).collect(Collectors.toList());
        System.out.println("List generated by flatmap :"+collect1);

        List<Student> studentList = new ArrayList<>();
        studentList.add(new Student("shilpa",30,Arrays.asList(647566677,67678887)));
        studentList.add(new Student("Parul",14,Arrays.asList(647566666,6767777)));
        studentList.add(new Student("Tina",10,Arrays.asList(64755555,6764444)));

        List<List<Integer>> collect2 = studentList.stream().map(student -> student.getPhone_nums()).collect(Collectors.toList());
        System.out.println(collect2);

        // flatmap
        List<Integer> collect3 = studentList.stream().flatMap(student -> student.getPhone_nums().stream()).collect(Collectors.toList());
        System.out.println("using flatmap mobile numbers "+collect3);


    }
}
